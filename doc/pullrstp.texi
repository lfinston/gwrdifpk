@c pullrstp.texi
@c [...]/gwrdifpk/doc/pullrstp.texi

@c Created by Laurence D. Finston (LDF) Thu Feb 13 15:39:22 CET 2014

@c This file is part of the gwrdifpk User and Reference Manual.
@c Copyright (C) 2014 Gesellschaft fuer wissenschaftliche Datenverarbeitung mbH Goettingen
@c See the section "GNU Free Documentation License" in the file 
@c fdl.texi for copying conditions.

@c Author:  Laurence D. Finston (LDF)

@c * (1) class Pull_Response_Type

@node class Pull_Response_Type, Miscellaneous Types, class Pull_Request_Type, Top
@chapter class Pull_Response_Type

@tindex class Pull_Response_Type
@tindex Pull_Response_Type, class 
@tindex class Scan_Parse_Parameter_Type
@tindex Scan_Parse_Parameter_Type, class 
@c
@findex pull_response
@findex xxparse
@c
@code{class Pull_Response_Type}.
@c
@code{class Scan_Parse_Parameter_Type} and the functions 
@code{pull_response} and @code{xxparse} are @code{friends}
of @code{class Pull_Response_Type}.
@xref{class Scan_Parse_Parameter_Type}, @ref{Pull functions}, 
and @ref{Scanning and parsing}.  
See also @ref{Pull Response database tables (gwirdcli)}.

@menu
* Pull_Response_Type Data Members::
* Pull_Response_Type Member Functions::
@end menu

@c *** (3) Pull_Response_Type Data Members

@node Pull_Response_Type Data Members, Pull_Response_Type Member Functions, , class Pull_Response_Type
@section Data Members

@c **** (4)

@subsection Private data members

@vindex Pull_Response_Type::pull_response_id
@vindex (Pull_Response_Type) pull_response_id
@c
@deftypevar int pull_response_id
@end deftypevar

@vindex Pull_Response_Type::user_id
@vindex (Pull_Response_Type) user_id
@c
@deftypevar int user_id
@end deftypevar

@vindex Pull_Response_Type::username
@vindex (Pull_Response_Type) username
@c
@deftypevar string username
@end deftypevar

@vindex Pull_Response_Type::server_hostname
@vindex (Pull_Response_Type) server_hostname
@c
@deftypevar string server_hostname
@end deftypevar

@vindex Pull_Response_Type::server_ip_address
@vindex (Pull_Response_Type) server_ip_address
@c
@deftypevar string server_ip_address
@end deftypevar

@vindex Pull_Response_Type::client_hostname
@vindex (Pull_Response_Type) client_hostname
@c
@deftypevar string client_hostname
@end deftypevar

@vindex Pull_Response_Type::client_ip_address
@vindex (Pull_Response_Type) client_ip_address
@c
@deftypevar string client_ip_address
@end deftypevar

@vindex Pull_Response_Type::Distinguished_Name
@vindex (Pull_Response_Type) Distinguished_Name
@c
@deftypevar string Distinguished_Name
@end deftypevar

@vindex Pull_Response_Type::pull_interval
@vindex (Pull_Response_Type) pull_interval
@c
@deftypevar int pull_interval
@end deftypevar

@vindex Pull_Response_Type::latest_pull
@vindex (Pull_Response_Type) latest_pull
@c
@deftypevar time_t latest_pull
@end deftypevar

@vindex Pull_Response_Type::created
@vindex (Pull_Response_Type) created
@c
@deftypevar time_t created
@end deftypevar

@vindex Pull_Response_Type::last_modified
@vindex (Pull_Response_Type) last_modified
@c
@deftypevar time_t last_modified
@end deftypevar


@vindex Pull_Response_Type::force_flag
@vindex (Pull_Response_Type) force_flag
@c
@deftypevar bool force_flag
@end deftypevar


@vindex Pull_Response_Type::pull_request_id
@vindex (Pull_Response_Type) pull_request_id
@c
@deftypevar int pull_request_id
@end deftypevar


@vindex Pull_Response_Type::pull_path_vector
@vindex (Pull_Response_Type) pull_path_vector
@c
@deftypevar {vector<Pull_Path_Type>} pull_path_vector
@end deftypevar

@c **** (4)

@subsection Public static constant data members

@deftypevr {Static constant} int  DEFAULT_PULL_INTERVAL
Value:  86400, i.e., one day in seconds.
@end deftypevr

@deftypevr  {Static constants} {unsigned int} LATEST_PULL
@deftypevrx {}                 {unsigned int} PULL_INTERVAL
@deftypevrx {}                 {unsigned int} CREATED
@deftypevrx {}                 {unsigned int} LAST_MODIFIED
@deftypevrx {}                 {unsigned int} CHECKSUMS
These static constants have the values 1, 2, 4, 8 and 16, i.e., @math{2^0 @dots{} 2^4}
and are used with bit-fields.
@end deftypevr



@c *** (3) Pull_Response_Type Member Functions

@node Pull_Response_Type Member Functions, , Pull_Response_Type Data Members, class Pull_Response_Type
@section Member Functions

@findex Pull_Response_Type::Pull_Response_Type
@findex Pull_Response_Type, default constructor
@findex Pull_Response_Type, constructor, default
@findex default constructor, Pull_Response_Type
@findex constructor, default, Pull_Response_Type
@c
@deftypefn {Default constructor} void Pull_Response_Type (void)
@end deftypefn

@findex Pull_Response_Type::set
@findex set (Pull_Response_Type)
@c
@deftypefun int set (@code{string} @var{s}, @*@
                     @code{const string &}@var{server_ip_address}, @*@
                     @code{string} {@var{thread_str} @code{= ""}})
@end deftypefun

@findex Pull_Response_Type::operator=
@findex Pull_Response_Type, assignment operator
@findex Pull_Response_Type, operator, assignment
@findex operator, assignment, Pull_Response_Type
@findex assignment operator, Pull_Response_Type
@c
@deftypefn {Assignment operator} {const Pull_Response_Type&} operator= @
   (@code{const Pull_Response_Type &}@var{p})
@end deftypefn

@findex Pull_Response_Type::clear
@findex clear (Pull_Response_Type)
@c
@deftypefun void clear (@code{void})
@end deftypefun


@findex Pull_Response_Type::show
@findex show (Pull_Response_Type)
@c
@deftypefun void show (@code{string} {@var{s} @code{= ""}})
@end deftypefun

@findex Pull_Response_Type::get_pull_response_from_database
@findex get_pull_response_from_database (Pull_Response_Type)
@c
@deftypefun int get_pull_response_from_database (@code{MYSQL *&}@var{mysql_ptr}, @*@
                                                 @code{bool} {@var{expired} @code{= false}}, @*@
                                                 @code{bool} {@var{create_new} @code{= false}}, @*@
                                                 @code{string} {@var{thread_str} @code{= ""}})
@end deftypefun


@findex Pull_Response_Type::update_database
@findex update_database (Pull_Response_Type)
@c
@deftypefun int update_database (@code{unsigned int} @var{flags}, @*@
                                 @code{Scan_Parse_Parameter_Type &}@var{param}, @*@
                                 @code{int} {@var{int_val} @code{= 0}}, @*@
                                 @code{string} {@var{thread_str} @code{= ""}})
@end deftypefun


@findex Pull_Response_Type::write_pull_response_to_database
@findex write_pull_response_to_database (Pull_Response_Type)
@c
@deftypefun int write_pull_response_to_database (@code{MYSQL *&}@var{mysql_ptr}, @*@
                                @code{bool} {@var{lock} @code{= false}}, @*@
                                @code{string} {@var{thread_str} @code{= ""}})
@end deftypefun






@c *** (3)

@c ** (2)

@c * (1) Local Variables for Emacs
  
@c Local Variables:
@c mode:Texinfo
@c abbrev-mode:t
@c eval:(outline-minor-mode t)
@c outline-regexp:"@c *\\*+"
@c eval:(set (make-local-variable 'run-texi2dvi-on-file) "gwrdifpk.texi")
@c fill-column:80
@c End:


